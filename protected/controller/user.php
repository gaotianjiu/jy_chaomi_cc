<?php/* * 用户模块 * bindEmail()绑定邮箱 * bindMobile()绑定手机 * editpass()修改密码 * memberInfo()基本资料 * safeCode()设置安全码 * safety()安全中心	.... */define("web_name", "炒米网");define("web_domain", "my.chaomi.cc");define("web_md5", "_chaomi_cc");class user extends spController {    function __construct() {        parent::__construct();		$sso_user = check();        if ($sso_user == true) {            $this->uid = $sso_user['uid'];            $this->mid = $sso_user['mid'];        } else {            re_login();            exit();        }    }    //修改密码    function editpass() {        $uid = $this->uid;        $mid = $this->mid;		$ip = get_client_ip();		$act = trim($this->spArgs("act"));		if($act=='post'){					$password = trim($this->spArgs("password")); //老密码			$npassword = trim($this->spArgs("npassword")); //新密码			if (strlen($password) < 6 || strlen($npassword) < 6) {				json_s(array('status'=>201,'msg'=>'密码不能少于6位','ids'=>''));			}			if (strlen($password) > 16 || strlen($npassword) > 16) {				json_s(array('status'=>201,'msg'=>'密码不能大于16位','ids'=>''));			}			//------------限制帐号请求次数----------begin			$key_name = 'user_editpass_uid_'.$uid;			if(cache_s($key_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制帐号请求次数----------end						$password = md5(md5($password . web_md5)); //双重md5加密			$gb_user = spClass('lib_member');			$r = $gb_user->find(array("uid" => $uid, "password" => $password));			if ($r) {				$npassword = md5(md5($npassword . web_md5)); //双重md5加密				$gb_user->update(array("uid" => $uid), array("password" => $npassword));				//清空登录信息				user_log($uid, 704, $ip, '用户修改新密码');				//---删除登录token---begin				check_out();								//---删除登录token---end				//---添加站内短信---begin				$type =  '901';				$tit  =  '安全提示：帐号修改了新密码!';				$txt  =  '系统安全提示，当前帐号修改了新密码，操作IP：'.$ip.'，如不是本人操作请联系客服，如是本人操作请忽略本条提示。';				web_msg_send($tit,$type,$uid,$txt);											//---添加站内短信---end					send_mobile_email($uid,"炒米网(chaomi.cc)帐号修改密码提醒","您于".date("Y-m-d H:i:s")."在平台成功修改了新的帐号登录密码，如是你本人操作请忽略。");				cache_s($key_name,null); //清空次数限制					    json_s(array('status'=>200,'msg'=>'密码修改成功，请重新使用新密码进行登录。','ids'=>''));			} else {				json_s(array('status'=>201,'msg'=>'原密码验证失败，请检查密码输入是否正确。','ids'=>'#password'));			}		}	        $this->module = "user";        $this->act = "safety";        $this->display("amui/member/userManagement/editpass.html");    }    //安全中心    function safety() {        $uid = $this->uid;        $gb_safe = spClass('pan_user_safecode');        if ($gb_safe->find(array("uid" => $uid))) {            $this->safeCode = '已设置安全码';        } else {            $this->safeCode = '未设置安全码';        }        $gb_user = spClass('pub_user');        $r = $gb_user->find(array("uid" => $uid));        if ($r["mobile"] > "") {            $this->safeMobile = '手机已绑定';        } else {            $this->safeMobile = '手机未绑定';        }        //邮箱绑定判断        $this->safeEmail = '邮箱未绑定';        $lib_member = spClass('lib_member');        $lib_member_r = $lib_member->find(array("uid" => $uid));        if ($lib_member_r['email'] > '') {            if (strstr($lib_member_r['email'], "@")) {                $this->safeEmail = '邮箱已绑定';            }        }        $this->module = "user";        $this->act = "safety";        $this->display("amui/member/userManagement/safety.html");    }    //设置安全码    function safeCode() {        $uid = $this->uid;		$ip = get_client_ip();        $gb_user = spClass('pub_user');        $r = $gb_user->find(array("uid" => $uid));        $mobile = $r["mobile"];				$safeCode_open = false;        if (($mobile == "") || (!$mobile)) {			 $this->safeCode_open = 1; //未绑定手机号			 $safeCode_open = true; //未绑定手机号		}				$gb_safe = spClass('pan_user_safecode');		$conditions = array("uid" => $uid);		$r = $gb_safe->find($conditions);		if($r){			$safeCode_count = 1;		}else{			$safeCode_count = 0;		}		$this->safeCode_count = $safeCode_count;		if($this->spArgs("p")=='a')$this->safeCode_one='a';		$act = trim($this->spArgs("act"));		if($act=='post' && $mobile>0 && $safeCode_open!=true){ 			//------------限制相同IP并发请求----------begin			$ip_key = md5($ip);			$key_name = 'user_safeCode_ip_'.$ip_key;			if(false === cache_a($key_name,time(),1))json_s(array('status'=>205,'msg'=>'很抱歉，系统繁忙请稍后1秒后重试!'));				//------------限制相同IP并发请求----------end					//------------限制帐号请求次数----------begin			$key_name = 'user_safeCode_uid_'.$uid;			if(cache_s($key_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制帐号请求次数----------end						$codes = trim($this->spArgs("codes"));			if(empty($codes) && $safeCode_count==1)json_s(array('status'=>201,'msg'=>'请填写正确短信验证码','ids'=>'#codes'));			$safecode = trim($this->spArgs("safecode"));			if(strlen($safecode)<6 || strlen($safecode) > 16){				json_s(array('status'=>201,'msg'=>'6-16个字母+数字组合，不能带有空格、区分大小写。','ids'=>'#safecode'));			}						$safecode = md5(md5($safecode . web_md5)); //双重md5加密			$get_member = spClass('lib_member');			$r = $get_member->find(array("uid" => $uid));			$pass = $r['password'];			if($r['password']==$safecode){				json_s(array('status'=>201,'msg'=>'注意：安全码不能与帐号登录密码相同','ids'=>'#safecode'));			}				if($safeCode_count==1){ //不是首次设置，都需要验证手机短信				$gbc = spClass('pub_user_check');				$conditions=array("cname"=>$mobile,"ctype"=>3,"cstr"=>$codes,"uid"=>$uid,"status"=>0);  				$ret = $gbc -> find($conditions);				if($ret){					if(time() - $ret['req_time'] > 600)json_s(array('status'=>201,'msg'=>'短信验证码已失效，请重新获取验证码','ids'=>'#codes')); // 10分钟有效期					if($ip != $ret['req_ip'])json_s(array('status'=>201,'msg'=>'验证码发送IP与当前IP不相同，请重新获取验证码','ids'=>'#codes')); // 发送IP与当前IP是否相等					$row = array("act_time"=>time(),"act_ip"=>$ip,"status"=>1); 					$gbc->update($conditions, $row);				}else{					json_s(array('status'=>201,'msg'=>'短信验证码错误','ids'=>'#codes'));					}  			}			$gb_safe = spClass('pan_user_safecode');			$conditions = array("uid" => $uid);			$r = $gb_safe->find($conditions);			if ($r) {				$gb_safe->update($conditions, array("safecode" => $safecode));			} else {				$gb_safe->create(array("uid" => $uid, "safecode" => $safecode));			}			$action_name = '设置';			if($safeCode_count==1){				$action_name = '修改';				//---添加站内短信---begin				$type =  '901';				$tit  =  '安全提示：帐号修改了新的安全码!';				$txt  =  '系统安全提示，当前帐号修改了新的安全码，操作IP：'.$ip.'，如不是本人操作请联系客服，如是本人操作请忽略本条提示。';				web_msg_send($tit,$type,$uid,$txt);											//---添加站内短信---end					send_mobile_email($uid,"炒米网(chaomi.cc)帐号修改安全码提醒","您于".date("Y-m-d H:i:s")."在平台成功修改了新的帐号安全码，如是你本人操作请忽略。");			}				cache_s($key_name,null);			user_log($uid, 705,$ip,'用户'.$action_name.'安全码');			json_s(array('status'=>200,'msg'=>'恭喜，安全码'.$action_name.'成功!'));			}		        $this->mobile = $mobile;        $this->act = "safety";        $this->status = '1';		$this->module = "user";        $this->display("amui/member/userManagement/safeCode.html");    }    //绑定手机    function bindMobile() {        $uid = $this->uid;		$ip = get_client_ip();        $gb_user = spClass('pub_user');        $r = $gb_user->find(array("uid" => $uid));        if (!empty($r["mobile"])) {            $this->mobile = $r["mobile"];			$mobile_old = $r["mobile"];			        }				$gb_safe = spClass('pan_user_safecode');		$conditions = array("uid" => $uid);		$r = $gb_safe->find($conditions);		if($r){			$safeCode_count = 1;		}else{			$safeCode_count = 0;		}		$this->safeCode_count = $safeCode_count;		$act = trim($this->spArgs("act"));		if($act=='post'){ 				$codes = trim($this->spArgs("codes"));			if(empty($codes))json_s(array('status'=>201,'msg'=>'请填写正确短信验证码','ids'=>'#codes'));					$mobile = trim($this->spArgs("mobile"));			if(empty($mobile) || !preg_match("/^1[34578]\d{9}$/", $mobile))json_s(array('status'=>201,'msg'=>'请填写正确的手机号码','ids'=>'#mobile'));				if($mobile==$mobile_old)json_s(array('status'=>201,'msg'=>'原绑定的手机号与更换绑定手机号不能相同','ids'=>'#mobile'));			//------------限制相同IP并发请求----------begin			$ip_key = md5($ip);			$key_name = 'user_bindMobile_ip_'.$ip_key;			if(false === cache_a($key_name,time(),1))json_s(array('status'=>205,'msg'=>'很抱歉，系统繁忙请稍后1秒后重试!'));				//------------限制相同IP并发请求----------end							//------------限制帐号请求次数----------begin			$key_name = 'user_bindMobile_uid_'.$uid;			if(cache_s($key_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制帐号请求次数----------end					//------------限制手机号请求次数----------begin			$key_name = 'user_bindMobile_mobile_'.$mobile;			if(cache_s($key_name)>10)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制手机号请求次数----------end				if($safeCode_count==1){				$safecode = trim($this->spArgs("safecode"));				if(empty($safecode))json_s(array('status'=>201,'msg'=>'请输入帐号安全码','ids'=>'#safecode'));				$safecode = md5(md5($safecode . web_md5)); //双重md5加密				$gb_safe = spClass('pan_user_safecode');				$conditions = array("uid" => $uid);				$r = $gb_safe->find($conditions);				if($r['safecode'] != $safecode)json_s(array('status'=>201,'msg'=>'安全码错误，请输入正确的帐号安全码','ids'=>'#safecode'));			}			$gbc = spClass('pub_user_check');			$conditions=array("cname"=>$mobile,"ctype"=>5,"cstr"=>$codes,"uid"=>$uid,"status"=>0);  			$ret = $gbc -> find($conditions);			if($ret){				if(time() - $ret['req_time'] > 600)json_s(array('status'=>201,'msg'=>'短信验证码已失效，请重新获取验证码','ids'=>'#codes')); // 10分钟有效期				if($ip != $ret['req_ip'])json_s(array('status'=>201,'msg'=>'验证码发送IP与当前IP不相同，请重新获取验证码','ids'=>'#codes')); // 发送IP与当前IP是否相等				$row = array("act_time"=>time(),"act_ip"=>$ip,"status"=>1); 				$gbc->update($conditions, $row);			}else{				json_s(array('status'=>201,'msg'=>'短信验证码错误','ids'=>'#codes'));				}						$gb_user = spClass('pub_user');			$conditions = array("uid" => $uid);			$mobile_count = $gb_user->findCount($conditions);			if($mobile_count>5)json_s(array('status'=>201,'msg'=>'当前手机号已绑定超过5个帐号，请更换其它手机号。','ids'=>'#mobile'));			$gb_user->update($conditions, array("mobile" => $mobile));						$action_name = '绑定';			if($mobile_old>0){				$action_name = '更换绑定';				//---添加站内短信---begin				$type =  '901';				$tit  =  '安全提示：帐号更换绑定手机号!';				$txt  =  '系统安全提示，当前帐号更换绑定了新的手机号，原：'.$mobile_old.' 更换为：'.$mobile.'，操作IP：'.$ip.'，如不是本人操作请联系客服，如是本人操作请忽略本条提示。';				web_msg_send($tit,$type,$uid,$txt);											//---添加站内短信---end						send_mobile_email($uid,"炒米网(chaomi.cc)帐号更换绑定手机号提醒","您于".date("Y-m-d H:i:s")."在平台成功将手机号更换绑定为:".$mobile."，如是你本人操作请忽略。");			}				cache_s($key_name,null);						user_log($uid, 706,$ip, '用户'.$action_name.'手机号');			json_s(array('status'=>200,'msg'=>'恭喜，手机号：'.$mobile.' '.$action_name.'成功!'));			}        $this->act = "safety";        $this->status = '1';		$this->module = "user";        $this->display("amui/member/userManagement/bindMobile.html");    }    //绑定邮箱    function bindEmail() {        $uid = $this->uid;		$ip = get_client_ip();        $gb_member = spClass("lib_member");        $r = $gb_member->find(array("uid" => $uid));		$Email_open = false;        if (!empty($r["email"])){            if (strstr($r["email"], "@")) {                $this->bindEmail = $r["email"];				$email_old = $r["email"];				$Email_open = true;            }        }		$gb_safe = spClass('pan_user_safecode');		$conditions = array("uid" => $uid);		$r = $gb_safe->find($conditions);		if($r){			$safeCode_count = 1;		}else{			$safeCode_count = 0;		}		$this->safeCode_count = $safeCode_count;				$act = trim($this->spArgs("act"));		if($act=='post'){ 				$codes = trim($this->spArgs("codes"));			if(empty($codes))json_s(array('status'=>201,'msg'=>'请填写正确邮件验证码','ids'=>'#codes'));						$email = trim($this->spArgs("email"));			$email = strtolower($this->spArgs('email'));			if(empty($email) || strlen($email) > 50 || !preg_match("/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/", $email))json_s(array('status'=>201,'msg'=>'请填写正确的邮箱','ids'=>'#email'));			if($email_old==$email)json_s(array('status'=>201,'msg'=>'原绑定的邮箱与更换绑定邮箱不能相同','ids'=>'#mobile'));			//------------限制相同IP并发请求----------begin			$ip_key = md5($ip);			$key_name = 'user_bindEmail_ip_'.$ip_key;			if(false === cache_a($key_name,time(),1))json_s(array('status'=>205,'msg'=>'很抱歉，系统繁忙请稍后1秒后重试!'));				//------------限制相同IP并发请求----------end							//------------限制帐号请求次数----------begin			$key_name = 'user_bindEmail_uid_'.$uid;			if(cache_s($key_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制帐号请求次数----------end					//------------限制同邮箱请求次数----------begin			$key_name = 'user_bindEmail_email_'.md5($email);			if(cache_s($key_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制同邮箱请求次数----------end			$lib_member = spClass("lib_member"); 			if($lib_member->find(array("email" => $email)))json_s(array('status'=>201,'msg'=>'邮箱已被其它帐号绑定','ids'=>'#email'));				if($safeCode_count==1){				$safecode = trim($this->spArgs("safecode"));				if(empty($safecode))json_s(array('status'=>201,'msg'=>'请输入帐号安全码','ids'=>'#safecode'));				$safecode = md5(md5($safecode . web_md5)); //双重md5加密				$gb_safe = spClass('pan_user_safecode');				$conditions = array("uid" => $uid);				$r = $gb_safe->find($conditions);				if($r['safecode'] != $safecode)json_s(array('status'=>201,'msg'=>'安全码错误，请输入正确的帐号安全码','ids'=>'#safecode'));			}			$gbc = spClass('pub_user_check');			$conditions=array("cname"=>$email,"ctype"=>5,"cstr"=>$codes,"uid"=>$uid,"status"=>0);  			$ret = $gbc -> find($conditions);			if($ret){				if(time() - $ret['req_time'] > 600)json_s(array('status'=>201,'msg'=>'邮件验证码已失效，请重新获取验证码','ids'=>'#codes')); // 10分钟有效期				if($ip != $ret['req_ip'])json_s(array('status'=>201,'msg'=>'验证码发送IP与当前IP不相同，请重新获取验证码','ids'=>'#codes')); // 发送IP与当前IP是否相等				$row = array("act_time"=>time(),"act_ip"=>$ip,"status"=>1); 				$gbc->update($conditions, $row);			}else{				json_s(array('status'=>201,'msg'=>'邮件验证码错误','ids'=>'#codes'));				}			$lib_member = spClass("lib_member"); 			$lib_member->update(array("uid"=>$uid),array('email'=>$email));							$action_name = '绑定';			if($email_old!=''){				$action_name = '更换绑定';				//---添加站内短信---begin				$type =  '901';				$tit  =  '安全提示：帐号更换绑定邮箱!';				$txt  =  '系统安全提示，当前帐号更换绑定了新的邮箱，原：'.$email_old.' 更换为：'.$email.'，操作IP：'.$ip.'，如不是本人操作请联系客服，如是本人操作请忽略本条提示。';				web_msg_send($tit,$type,$uid,$txt);											//---添加站内短信---end					send_mobile_email($uid,"炒米网(chaomi.cc)帐号更换绑定邮箱提醒","您于".date("Y-m-d H:i:s")."在平台成功将邮箱更换绑定为".$email."，如是你本人操作请忽略。");			}				cache_s($key_name,null);						user_log($uid, 702, $ip, '用户'.$action_name.'邮箱');			json_s(array('status'=>200,'msg'=>'恭喜，邮箱：'.$email.' '.$action_name.'成功!'));									}        $this->status = '1';        $this->act = "safety";		$this->module = "user";        $this->display("amui/member/userManagement/bindEmail.html");    }	//基本资料    function memberInfo() {        $uid = $this->uid;        $gb = spClass('pan_member_info');		$ip = get_client_ip();        $r = $gb->find(array("uid" => $uid));		$tip = trim($this->spArgs("tip"));		if($tip=='n')$this->tip ='n';        if ($r) {            $this->realname = $r["realname"];            // $this->province = substr($r["city"], 0, 2);            // $this->city = $r["city"];            // $this->address = $r["address"];            // $this->zip = $r["zip"];            $this->phone = $r["phone"];            // $this->fax = $r["fax"];            $this->qq = $r["qq"];			if($r["qq"])$this->tip ='y';        }		$act = trim($this->spArgs("act"));		if($act=='post'){ 				// $realname = $this->spArgs('realname_');			//获取实名认证数据			$pan_member_card = spClass('pan_member_card');			$member_card_result = $pan_member_card->find(array('uid' => $uid),"time desc");			if ($member_card_result) {				$card_status = $member_card_result['status'];				if ($card_status == 2) {					$realname = $member_card_result['first_name'] . $member_card_result['last_name'];				}else{					json_s(array('status'=>201,'msg'=>'请先完成实名认证'));				}			}			if(!$realname)json_s(array('status'=>201,'msg'=>'请先完成实名认证'));			$city = $this->spArgs('city_');			$address = $this->spArgs('address_');			$zip = $this->spArgs('zip_');			$phone =$this->spArgs('phone_');			$fax = $this->spArgs('fax_');			$qq = $this->spArgs('qq_');			if(!preg_match("/^1[34578]\d{9}$/", $phone) && $phone){				json_s(array('status'=>201,'msg'=>'手机号格式错误'));			}			if(!preg_match("/^[1-9][0-9]{4,}$/", $qq) && $qq){				json_s(array('status'=>201,'msg'=>'QQ号格式错误'));			}						if (!empty($realname)) {				$gb = spClass('pan_member_info');				if ($gb->find(array("uid" => $uid))) {					$row = array(						'realname' => $realname,						// 'city' => $city,						// 'address' => $address,						// 'zip' => $zip,						'phone' => $phone,						// 'fax' => $fax,						'qq' => $qq					);					$gb->update(array("uid" => $uid), $row);				} else {					$newrow = array(						'uid' => $uid,						'utype' => 1,						'realname' => $realname,						// 'city' => $city,						// 'address' => $address,						// 'zip' => $zip,						'phone' => $phone,						// 'fax' => $fax,						'qq' => $qq					);					$gb->create($newrow);				}				user_log($uid, 707,$ip, '用户更新资料');				json_s(array('status'=>200,'msg'=>'资料更新成功'));			}			json_s(array('status'=>201,'msg'=>'资料更新出错!!!'));			}        $this->act='memberInfo';		$this->module = "user";        $this->display("amui/member/userManagement/memberInfo.html");    }    //用户安全设置    function settings() {        $uid = $this->uid;		$ip = get_client_ip();		check_code();        $gb_user = spClass('pub_user');        $r = $gb_user->find(array("uid" => $uid));        if (!empty($r["mobile"])) {            $this->mobile = $r["mobile"];			$mobile = $r["mobile"];        }else{			 $this->error('请先绑定手机号！', '/user/bindMobile');		}		        $gb = spClass('pan_member_config');        $r = $gb->find(array("uid" => $uid));        if ($r) {            $this->jiaoyi = $r["jiaoyi"];            $this->mima = $r["mima"];            $this->shezhi = $r["shezhi"];            $this->tixian = $r["tixian"];        }		$act = trim($this->spArgs("act"));		if($act=='post'){ 			    $jiaoyi = implode(',', $this->spArgs('jiaoyi'));			$tixian = implode(',', $this->spArgs('tixian'));			$codes = trim($this->spArgs("codes"));			if(empty($codes))json_s(array('status'=>201,'msg'=>'请填写正确短信验证码','ids'=>'#codes'));					//------------限制相同IP并发请求----------begin			$ip_key = md5($ip);			$key_name = 'user_settings_ip_'.$ip_key;			if(false === cache_a($key_name,time(),3))json_s(array('status'=>205,'msg'=>'很抱歉，系统繁忙请稍后3秒后重试!'));				//------------限制相同IP并发请求----------end							//------------限制帐号请求次数----------begin			$key_name = 'user_settings_uid_'.$uid;			if(cache_s($key_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，请求次数限制，请稍后1小时后再操作'));							cache_s($key_name,intval(cache_s($key_name))+1,3600);			//------------限制帐号请求次数----------end							$gbc = spClass('pub_user_check');			$conditions=array("cname"=>$mobile,"ctype"=>7,"cstr"=>$codes,"uid"=>$uid,"status"=>0);  			$ret = $gbc -> find($conditions);			if($ret){				if(time() - $ret['req_time'] > 600)json_s(array('status'=>201,'msg'=>'短信验证码已失效，请重新获取验证码','ids'=>'#codes')); // 10分钟有效期				if($ip != $ret['req_ip'])json_s(array('status'=>201,'msg'=>'验证码发送IP与当前IP不相同，请重新获取验证码','ids'=>'#codes')); // 发送IP与当前IP是否相等				$row = array("act_time"=>time(),"act_ip"=>$ip,"status"=>1); 				$gbc->update($conditions, $row);			}else{				json_s(array('status'=>201,'msg'=>'短信验证码错误','ids'=>'#codes'));				}						if (!empty($jiaoyi) && !empty($tixian)) {				$gb = spClass('pan_member_config');				if ($gb->find(array("uid" => $uid))) {					$row = array(						'jiaoyi' => $jiaoyi,						'tixian' => $tixian					);					$gb->update(array("uid" => $uid), $row);				} else {					$newrow = array(						'uid' => $uid,						'jiaoyi' => $jiaoyi,						'tixian' => $tixian					);					$gb->create($newrow);				}				user_log($uid, 708, $ip, '提交安全中心设置');				json_s(array('status'=>200,'msg'=>'恭喜，设置成功!'));			}			json_s(array('status'=>200,'msg'=>'设置失败，请重试!'));					}		        $this->status = '1';        $this->act='settings';		$this->module = "user";        $this->display("amui/member/userManagement/setting.html");    }	//登录日志    function mlog() {        $uid = $this->uid;		$page = intval($this->spArgs('page', 1));        if($page <1) $page=1;        $gb = spClass("pub_user_log");        $sql="select * from share_user.pub_user_log WHERE uid = $uid ORDER BY logtime DESC ";        $list=$gb->spPager($page,pgsize)->findSql($sql);		//分页开始        $pager = $gb->spPager()->getPager();        if ($pager['total_page'] > 5) {            if ($page <= 3) {                $pager['all_pages'] = array_slice($pager['all_pages'], 0, 5);            } else {                $pager['all_pages'] = array_slice($pager['all_pages'], $page - 3, 5);            }        }        $this->pager = $pager;        //分页结束	        $this->res=$list;        $this->act="mlog";		$this->module = "user";        $this->display("amui/member/userManagement/mlog.html");    }    //域名注册商信息    function memberAccount() {        $uid = $this->uid;        $db_registrar = spClass('pan_member_registrar');        $conditions = array('uid' => $uid);        $result = $db_registrar->findAll($conditions);        for ($i = 0; $i < count($result); $i++) {            $result[$i]['website'] = getDomainSite($result[$i]['website']);        }        $this->res = $result;        $this->module = "user";        $this->act = "memberAccount";        $this->display("amui/member/am_memberAccount.html");    }    //添加域名注册商信息    function memberAccountAdd() {        $uid = $this->uid;		$act = trim($this->spArgs("act"));		if('post'==$act){ //前台post请求数据 添加域名注册商信息					$website = intval($this->spArgs("website"));			$webid = trim($this->spArgs("webid"));			$webcheck = trim($this->spArgs("webcheck"));			$ip = trim(get_client_ip());						//处理安全码			$pw = trim($this->spArgs('safecode'));			if(empty($pw))json_s(array('status'=>201,'msg'=>'交易密码不能为空'));			$pw = md5(md5($pw . web_md5)); //双重md5加密						$pws = spClass('pan_user_safecode')->find(array('uid' => $uid));//密码获取代码			//------------限制帐号请求验证安全码次数----------begin			$key_safeCode_name = 'user_Acc_uid_'.$uid;			if(cache_s($key_safeCode_name)>30)json_s(array('status'=>205,'msg'=>'很抱歉，交易密码验证请求次数限制，请稍后1小时后再操作'));							//------------限制帐号请求验证安全码次数----------end				if ($pw != $pws['safecode']) {				cache_s($key_safeCode_name,intval(cache_s($key_safeCode_name))+1,3600);//输入错误的安全码缓存+1				json_s(array('status'=>201,'msg'=>'交易密码错误，请注意区分大小写'));			}			cache_s($key_safeCode_name,0,3600);//输入正确的安全码重置为0						if (!empty($website) && !empty($webid) && !empty($webcheck)) {				$db_registrar = spClass('pan_member_registrar');				$newrow = array(					'uid' => $uid,					'website' => $website,					'webid' => $webid,					'webcheck' => $webcheck,					'addtime' => time(),					'addip' => $ip				);				$db_registrar->create($newrow);				user_log($uid, 709, $ip,'用户添加绑定域名注册商账号');				json_s(array('status'=>200,'msg'=>'添加绑定域名注册商信息成功'));			} else {				json_s(array('status'=>201,'msg'=>'表单各项都必须认真填写，不能为空'));			}					}        $this->module = "user";        $this->act = "memberAccount";        // $this->display("member/memberAccountAdd.html");        $this->display("amui/member/am_memberAccountAdd.html");    }	//未读短信    function web_message() {        $uid = $this->uid;        $pgno=intval($this->spArgs('page',1));        if($pgno <1) $pgno=1;        $gb = spClass('pub_web_msg');        $sql="select * from share_user.pub_web_msg WHERE to_uid = $uid and is_status = 0 order by id desc";        $list=$gb->spPager($pgno, pgsize)->findSql($sql);        //分页        $pager = $gb->spPager()->getPager();        if ($pager['total_page'] > 5) {            if ($pgno <= 3) {                $pager['all_pages'] = array_slice($pager['all_pages'], 0, 5);            } else {                $pager['all_pages'] = array_slice($pager['all_pages'], $pgno - 3, 5);            }        }        $this->res=$list;        $this->pager = $pager;        $this->act='web_message';		$this->module = "user";        $this->display("amui/member/message/message_unread.html");    }	//已读短信    function message_read() {        $uid = $this->uid;        $pgno=intval($this->spArgs('page',1));        if($pgno <1) $pgno=1;        $gb = spClass('pub_web_msg');        $sql="select * from share_user.pub_web_msg WHERE to_uid = $uid and is_status =1 order by id desc";        //$list = $gb->findall(array("to_uid" => $uid));        $list=$gb->spPager($pgno, pgsize)->findSql($sql);        //分页        $pager = $gb->spPager()->getPager();        if ($pager['total_page'] > 5) {            if ($pgno <= 3) {                $pager['all_pages'] = array_slice($pager['all_pages'], 0, 5);            } else {                $pager['all_pages'] = array_slice($pager['all_pages'], $pgno - 3, 5);            }        }        $this->res=$list;        $this->pager = $pager;        $this->status = '1';        $this->act='web_message';		$this->module = "user";        $this->display("amui/member/message/message_read.html");    }	//回收站    function message_dustbin() {        $uid = $this->uid;        $pgno=intval($this->spArgs('page',1));        if($pgno <1) $pgno=1;        $gb = spClass('pub_web_msg');        $sql="select * from share_user.pub_web_msg WHERE to_uid = $uid and is_status =2 order by id desc";        $list=$gb->spPager($pgno, pgsize)->findSql($sql);		        //分页        $pager = $gb->spPager()->getPager();        if ($pager['total_page'] > 5) {            if ($pgno <= 3) {                $pager['all_pages'] = array_slice($pager['all_pages'], 0, 5);            } else {                $pager['all_pages'] = array_slice($pager['all_pages'], $pgno - 3, 5);            }        }        $this->res=$list;        $this->pager = $pager;        $this->status = '2';        $this->act='web_message';		$this->module = "user";        $this->display("amui/member/message/message_dustbin.html");    }	//短信内容    function msg_content(){        $id = (int)$this->spArgs("id");        $uid = $this->uid;        $gb = spClass('pub_web_msg');        $sql="select a.title,a.to_time,a.is_status,b.content from share_user.pub_web_msg a,share_user.pub_web_msg_content b where a.content_id=b.content_id and a.content_id=$id and a.to_uid = $uid ";        $list=$gb->findSql($sql);		if(!$list)d404();		$is_status = $list[0]['is_status'];		if($is_status==0){			//---设为已读---begin			$row = array('is_status'=>1);			$conditions = "to_uid = $uid and content_id in (".$id.") ";			$rel=$gb->update($conditions,$row);			//---设为已读---end		}        $this->res=$list;        $this->status=1;		$this->module = "user";		$this->act='web_message';        $this->display("amui/member/message/message_content.html");    }    //短信设为已读    function readall(){        $uid = $this->uid;        $content_id = $this->spArgs('id');        if(is_array($content_id)){			$count = count($content_id);			//务必强制转换成数值类型---begin			foreach($content_id as $v){				$new_arr[]=(int)$v;			}			//务必强制转换成数值类型---end            $ids = implode(',',$new_arr);        }else{            $ids = (int)$content_id; //务必强制转换成数值			$count = 1;        }		if(!$ids)json_s(array('status'=>201,'msg'=>'参数ID不能为空'));		if($count>20)json_s(array('status'=>201,'msg'=>'设为已读失败，每次最多可批量设置20条。'));		$gb = spClass('pub_web_msg');		//判断相关权限等---begin		$conditions = "to_uid = $uid and is_status=0 and content_id in (".$ids.")";		$ret_count = $gb->findCount($conditions);		if($ret_count!=$count)json_s(array('status'=>201,'msg'=>'操作非法，权限不足或状态已设为已读'));		//判断相关权限等---end        //---设为已读---begin		$row = array('is_status'=>1);		$ret = $gb->update($conditions,$row);        //---设为已读---end		//影响行数 $gb->affectedRows()		if($ret && $gb->affectedRows()>=1){			json_s(array('status'=>200,'msg'=>'设为已读成功'));		}else{			json_s(array('status'=>201,'msg'=>'设为已读失败'));		}    }    //短信放入回收站    function dustbin(){        $uid = $this->uid;        $content_id = $this->spArgs('id');        if(is_array($content_id)){			$count = count($content_id);			//务必强制转换成数值类型---begin			foreach($content_id as $v){				$new_arr[]=(int)$v;			}			//务必强制转换成数值类型---end            $ids = implode(',',$new_arr);        }else{            $ids = (int)$content_id; //务必强制转换成数值			$count = 1;        }		if(!$ids)json_s(array('status'=>201,'msg'=>'参数ID不能为空'));		if($count>20)json_s(array('status'=>201,'msg'=>'放入回收站失败，每次最多可批量设置20条。'));		$gb = spClass('pub_web_msg');		//判断相关权限等---begin		$conditions = "to_uid = $uid and is_status in(0,1) and content_id in (".$ids.")";		$ret_count = $gb->findCount($conditions);		if($ret_count!=$count)json_s(array('status'=>201,'msg'=>'操作非法，权限不足或短信已在回收站'));		//判断相关权限等---end        //---设为已读---begin		$row = array('is_status'=>2);		$ret = $gb->update($conditions,$row);        //---设为已读---end		//影响行数 $gb->affectedRows()		if($ret && $gb->affectedRows()>=1){			json_s(array('status'=>200,'msg'=>'放入回收站成功'));		}else{			json_s(array('status'=>201,'msg'=>'放入回收站失败'));		}    }}